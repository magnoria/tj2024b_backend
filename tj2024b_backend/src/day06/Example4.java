package day06;

public class Example4 {

	public static void main(String[] args) {
		
		//[1] 클래스 정의하기, 객체를 만들기위한 일종의 틀/ 설계도 만들기
		//==>틀/설계도 필요한 이유
			//빠르고 일정한 틀 및 설계도로 형태를 만들수있기때문
		// * 객체 설계도 클래스는 main함수가 없어도 된다.
		//* 클래스 생성하는 방법 : class클래스명{}
		
		
		
		//[2] 객체 생성하기, 클래스 기반으로 메모리 할당하기. , 인스턴스
		//* 객체 생성하는 방법 : new클래스명(); , 클래스명 변수명 = new 클래스명();
		
		new 붕어빵틀(); // 붕어빵 생성
		new 붕어빵틀();
		
		붕어빵틀 붕어빵1 = new 붕어빵틀();// 붕어빵 생성하고 변ㅜ에 담음
		붕어빵틀 붕어빵2 = new 붕어빵틀();
		//[3] 객체 멤버의 접근하기 , .(접근연산자)를 이용한 멤버변수를 사용한다.
		붕어빵1.내용물 = "슈크림";
		붕어빵2.내용물 = "팥";
		
		
		
		//[1] 클래스 정의하기 , 자동차 
			//- 만들고자 하는 객체가 가질 수 있는 속성들을 구성하여 클래스에 코드로 작성한다.
		
		//[2]객체 생성하기 , 클래스 기반
			//- new 클래스명(); , 클래스명 변수명 = new 클래스명();
		new Car(); // 객체 생성후 변수에 대입하지 않으면 사라진다.
		Car car1 = new Car(); // 주로 객체 생성과 동시에 변수에 담는다. * 변수타입은 클래스(타입)으로 한다.
		Car car2 = new Car();
	
		
		
		//[3]객체의 멤버변수 접근하기 , 동일한 설계도 /클래스로 서로 다른 객체 2개 생성
		
		car1.차량주 = "유재석";
		car2.차량주 = "강호동";
		
		// - 
		
		
		ComPuter mincom1 = new ComPuter();
		ComPuter mincom2 = new ComPuter();
		
		mincom1.cpu = "인텔";
		mincom2.cpu = "AMD";
		
	}

}
