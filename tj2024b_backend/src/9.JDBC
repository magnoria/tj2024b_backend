[JDBC]
	1. [J]JVA [D]DATA [B]BASE [C]CONNECT : 자바 데이터베이스 연동
		-> JAVA 와 DB서버를 연동하는 기술
		
	2. JDBC 라이브러리
		-> 라이브러리 : 미리 만들어진 클래스/인터페이스 들
		1. JDBC MYDQL 라이브러리 다운로드 https://dev.mysql.com/downloads/connector/j/
			1.Platform Independent (Architecture Independent), ZIP Archive	9.1.0	5.1M	
			Download
		
		2. 내 프로젝트 MYSQL JDBC 라이브러리 등록
			1. mysql-connector-j-9.1.0 을 프로젝트 내로 이동 
			2. mysql-connector-j-9.1.0 파일 오른쪽 클릭 --> build path ---> add to build path
	3. DB 연동 코드
		1. 연동할 JDBC 라이브러리 클래스 로드하기
		Class.forName("com.mysql.cj.jdbc.Driver");
			- mySQL : com.mysql.cj.jdbc.Driver
			- oracle : oracle.jdbc.driver.OracleDriver
		2. 지정한 DB서버와 계정정보가 일치 했을때 DB연동 시도하고 성공시 연동 구현체를 반환한다.
			DriverManager.getConnection("jdbc:mysql://IP주소:PORT/DB명 ", "계정명", "비밀번호")
				local : "jdbc:mysql"://localhost:3306/db명" , "root" , "1234"
				
				
			- 연동된 결과를 인터페이스에서 조작할 수 있도록 반환을 하는 코드	
			Connection
				
				
	4. JDBC 핵심 인터페이스
		* 인터페이스란? 각각의 클래스들 간의 동일한 목적하의 서로 다른 기능을 수행하게끔하는 타입, * 추상메소드
		1. Connection 인터페이스 :DB서버와 연동 시도하고 연동 성공 결과를 반환
			예] 서로 다른 DB회사에서 제공하는 클래스들을 하나의 타입(인터페이스)에서 인스턴스를 사용.
			즉] 서로다른 DB 회사들은 자바의 Connection 인터페이스의 추상메소드를 구체화 했다.
			Connection = conn = DriverManager.getConnection("mysql");
			Connection = conn = DriverManager.getConnection("oracl");
			Connection = conn = DriverManager.getConnection("mariaDB");
			
			1.추상메소드 : 
			conn.prepareStatement("SQL문법") : 연동된 DB에 SQL문법을 기재 하고 PreperedStatement 반환
			
		
			2.PreperedStatment
				1. 추상메소드 :
					ps.executeQuery();					: select 기재된 SQL을 실행하고, 처리된 레코드를 조작할 수 있는 ResultSet 반환			
					ps.executeUpdate();					: insert, update, delete 기재된 SQL을 실행하고 , 처리된 레코드 수 반환 --> int로 반환 
		
		
		
		
			3.ResultSet
				1. 추상메소드 :
					rs.next(); 					: select 결과 조회된 레코드드들 중에서 다음 레코드 이동, 다음 레코드가 있으면 true, 없으면 false 반환
					
					* 레코드 : 행 /가로 단위 데이터들
					*만약에 레코드(행)개 이면 next()는 6번 실행이 가능하다.
					
					while(rs.next()) 회원목록보기 , 게시물전체조회         목록을 찾아야해서
					 
					if(rx.next()) : 아이디 찾기 , 비밀번호찾기, 로그인, 게시물 개별조회     아이디 한개만 찾으면 되서
				
					rs.getXXX("속성명") : 현재 ResultSet 가 조회중인 레코드에서 속성값 반환 
					*속성명/표제목 : 값의 대표적인 이름 , 속성값 : 값
					* XXX : 속성명의 타입, SQL int --> JAVA .getInt() , SQL varchar --> JAVA. getString()
				
				
				
				
		
		