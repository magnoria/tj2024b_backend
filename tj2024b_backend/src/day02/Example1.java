//한줄 주석
/* 여러줄 주석*/

/*
 * ---------------------------------------------------------------------------
 1. .Java파일이란? 자바코드를 작성할수 있는 확장자명
 		-확장자명이란? 데이터를 사용하는 방법 정의
 2. .class파일이란? 자바가 .java파일을 컴파일(번역)해서 만들어진 파일         (컴파일과정  .java[자바코드]-----> .class[바이트파일])
 																					->class로 컴파일(번역된)된파일을 스레드가 읽음
 		- 워크스페이스내 프로젝트내 bin폴더내 컴파일(번역)된 .class 파일 확인
 		개발자가( .java파일 에서 class문법작성)---> 컴파일 ----->.class파일 생성
 3. main함수란? 스레드(이야기의 흐름, 줄기)가 내장된함수
 		- 스레드란? 번역된 코드를 읽어드리기 위한 흐름
 		스레드는 번역된 코드를 읽는것
 ------------------------------------------------------------------------------
 
 	 */

package day02; // 현재 클래스가 위치한 패키지/폴더 명

public class Example1 {// 클래스의 시작 // 커파일이 번역하는 단위를 class 단위 //class 밖에 있는 코드는 번역안됨
	
	//무조건 자바는 클래스안에서만 번역된다 밖에서는 클래스 밖으로 벗어나면 번역이 안됨
	
	//메인함수밖이므로 코드를 치면 번역은 되지만 실행은 되지 않는다
	
	// 번역된 코드를 읽어드리고 실행하는 코드는 무조건 main함수{}안에서 작성해야한다.
	
	public static void main(String[] args) { // main함수 시작
		//main함수가 있어야 스레드 즉 번역된 코드를 읽을 수 있다.
		
		// 상수 : 초기화 이후 변하지 않는 값, final키워드 , 상수명은 대문자로 사용한다. // p.61
		final int MAX_NUM = 100;
		final int MIN_NUM;
		MIN_NUM =0;
		
		//MAX_NUM =1000; [오류]**상수는 수정불가
		
		// + 출력함수 JS: console.log() JAVA:System.out.println();
		//자동완성, syso 입력후 컨트롤 + 스페이스바, +(연결연산자): "문자열"+변수명
		System.out.println("MAX_NUM:" +MAX_NUM);
		System.out.println("MIN_NUM:" +MIN_NUM);
			
		// + 자바코드 실행, main함수가 존재하는 class에서 catrl+f11
		
		final int MY_AGE =22;
		System.out.println(MY_AGE);
		
		// 리터럴이란 ? 개발자가 키보드로부터 입력한 숫자, 문자, 논리 들을 일컫는 말
				// - 자바는 이러한 리터럴 값들을 상수풀(메모리공간)이라는 곳에서 상수로 사용한다.
		// - 변수는 2개, 리터럴값 1개
		int num1 =3;
		int num2 = num1;
		//- 변수는 2개 , 리터럴 값 1개
		char str1 = 'a';
		char str2 = 'a';
		
	}//main함수 끝

}// 클래스의 끝
