package day01;

public class Example2 {

	public static void main(String[] args) {
		
		
		// 자료형 /타입 / 분류 : 데이터를 나누는 방법 
		
		
		
		/*
		 * - 자바 기본 타입 , 8가지 존재
		 * 
		 * 		[키워드]		[용량]			[사용범위]
		 * 
		 [논리]	boolean     1바이트 		true혹은false 만 저장할수있다.   자바는 0또는 1 이기에 비트 이지만 자바는 바이트 단위이므로 바이트로 표현
		 
		 [문자]	char    	2바이트 		유니코드 , 작은따음표로 감싼 것을 저장할수있다 , 'A'    문자인 유니코드가 2바이트
		 		-String     n바이트 		문자열클래스, 큰따음표로 감산 문자를 저장할 수 있다.   "ABC" 기본타입이아닌 조금 다른것 객체임
		 		
		 [정수]  byte        1바이트		-128 ~ +127 저장 0도 포함되서
				short		2바이트		+-3만정도 저장
				int			4바이트		+-21억정도 저장    , 만든사람이 정수의 기본타입 (리터럴)을 바이트로 정함, 키보드로 입력한 정수는 다 int     리터럴정수(키보드로 입력받은 정수)
				long		8바이트		+-21억정도 저장	, 리터럴정수뒤에 L/l 붙이기
		 
		 [실수, 부동소수점]
		 		float(뜨다)	4바이트   	소수점8자리 표현
		 		double		8바이트		소수점17자리 표현
		 		
		 		*왜? 타입을 여러가지 구분해서 범위맞게 사용하라고 할까? 메모리 효율적으로 적절하게 선택하여 사용하려고	(설계)	 		
		 
		*/
		
		//1. boolean 타입은 ture와 false만 저장할 수 있다.
		boolean bool1 = true;
		System.out.println("bool1:" + bool1); // +연결 연산자. "문자열" + 변수호출값
		//boolean bool2 = 3; //오류 이유 : boolean 타입에 3를 저장할수 없다
		boolean bool3 = false;
		System.out.println("bool3:" + bool3);
		
		
		
		//*********************************************아래 문자타입
		
		//2. char 타입은 작은 따옴표를 이용한 문자 1개만 저장 할 수 있다.
		char ch1 = 'A'; System.out.println("ch1:" + ch1);
		//char ch2 = 'ABC'; //오류발생 : 문자 1개만 저장가능하므로 오류
		//char ch3 = "ABC"; // 오류발생 : char는 큰따옴표를 사용할수 없다.
		
		
		
		//3. String 클래스타입은 큰따옴표를 이용한 문자여러개를 저장할수있다. * 참고로 기본타입은 아니다.
		String str1 = "ABC"; System.out.println("str1:" +str1);
		//String str2 = 'ABC'; // 오류발생 : 문자 여러개는 큰따옴표로 깜사야 한다.
		
		
		//************************************************아래 숫자타입
		
		
		//4. byte 타입은 - 128 ~ 127 까지 저장이 가능하다.
		byte b1 = 100; System.out.println("b1:" + b1);
		//byte b2 = 300; //오류발생 : 타입 저장 허용범위 벗어났기 때문에 오류 
		
		//5. short 타입은 대략 +-3만정도 저장이 가능하다.
		short s1 = 32000; System.out.println("s1:"+s1);
		//short s2 = 40000; //오류 발생 : 타입 저장 허용범위 벗어났기 때문에 오류
		
		//6. int 타입은 대략 +-21억정도 저장이 가능하다.
		int i1 = 2100000000; System.out.println("i1:"+i1);
		//int i2 = 3000000000; 오류발생 : 타입의 허용범위 벗어났기 때문에 오류
		
		//7. long 타입은 대략 +-21억정도 이상이 저장 가능하다. , 정수리터럴 값 뒤에 L/l 붙인다.
		long lo1 = 3000000000L; System.out.println("lo1:"+lo1);
		//long lo2 = 4000000000l 오류발생 : 리터럴값은 int 이므로 long에 대입할수없다.
		
		//8. float 타입은 소수점 8짜리까지 표현 (반올림 된다), 실수 리터럴 값 뒤에 F/f 붙인다
		//float f1 = 0.123456789123456789; // 오류발생 : 실수 리터럴값은 double 이므로 float에 대입할 수 없다.
		float f2 = 0.1234567890123456789F; System.out.println("f2: " + f2);
		
		//9. double 타입은 소수점 17자리까지 표현, 실수리터럴 값의 기본타입
		double d1 = 0.123456789123456789; System.out.println("d1 :"+d1);
		
				

	}

}
